name: Windows RDP with High Performance

on:
  workflow_dispatch:
    inputs:
      rdp_duration:
        description: 'RDP session duration in minutes (max 360)'
        required: false
        default: '180'
        type: string
      enable_gpu:
        description: 'Enable GPU acceleration'
        required: false
        default: true
        type: boolean
      tunnel_service:
        description: 'Tunnel service to use (bore, localtunnel, ngrok, or manual)'
        required: false
        default: 'bore'
        type: choice
        options:
        - bore
        - localtunnel
        - ngrok
        - manual

jobs:
  setup-windows-rdp:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Yaha tak same hai tera

    - name: Setup Tunnel Service
      run: |
        $tunnelService = "${{ github.event.inputs.tunnel_service }}"
        Write-Host "Setting up tunnel service: $tunnelService" -ForegroundColor Yellow

        if ($tunnelService -eq "bore") {
          Write-Host "Setting up Bore tunnel..." -ForegroundColor Yellow
          Write-Host "Installing Visual C++ Redistributable..." -ForegroundColor Yellow
          Invoke-WebRequest -Uri https://aka.ms/vs/17/release/vc_redist.x64.exe -OutFile vc_redist.x64.exe
          Start-Process -FilePath .\vc_redist.x64.exe -ArgumentList "/install", "/quiet", "/norestart" -Wait

          Write-Host "Downloading Bore..." -ForegroundColor Yellow
          Invoke-WebRequest -Uri https://github.com/ekzhang/bore/releases/download/v0.6.0/bore-windows-amd64.zip -OutFile bore.zip

          Expand-Archive -Path bore.zip -DestinationPath . -Force

          Write-Host "Starting Bore tunnel..." -ForegroundColor Yellow
          Start-Process -FilePath ".\bore.exe" -ArgumentList "local", "--to", "bore.pub", "--port", "3389" -NoNewWindow -RedirectStandardOutput "bore_output.txt"

          Start-Sleep -Seconds 10

          $output = Get-Content "bore_output.txt" -Raw
          if ($output -match "listening at bore\.pub:(\d+)") {
            $port = $matches[1]
            $url = "bore.pub:$port"
            echo "BORE_URL=$url" | Out-File -FilePath $env:GITHUB_ENV -Append
            Write-Host "Bore tunnel is running at $url" -ForegroundColor Green
          } else {
            Write-Host "Could not detect Bore tunnel port." -ForegroundColor Red
          }
        } else {
          Write-Host "Skipping Bore setup. Selected service: $tunnelService" -ForegroundColor Yellow
        }

    - name: Display Connection Information
      run: |
        Write-Host "=== FINAL SYSTEM STATUS ===" -ForegroundColor Green
        Write-Host ""
        Write-Host "RDP is now enabled and configured for high performance" -ForegroundColor Green
        Write-Host "Session will remain active for ${{ github.event.inputs.rdp_duration }} minutes" -ForegroundColor Green
        Write-Host "=== CONNECTION DETAILS ===" -ForegroundColor Green
        Write-Host "Username: rdpuser" -ForegroundColor Cyan
        Write-Host "Password: P@ssw0rd123!" -ForegroundColor Cyan
        Write-Host "Port: 3389" -ForegroundColor Cyan
        Write-Host "Bore Public URL: $env:BORE_URL" -ForegroundColor Cyan
        Write-Host "==================================" -ForegroundColor Green

    - name: Keep session alive
      run: |
        Write-Host "Keeping RDP session alive for ${{ github.event.inputs.rdp_duration }} minutes..." -ForegroundColor Yellow
        $duration = [int]"${{ github.event.inputs.rdp_duration }}"
        $endTime = (Get-Date).AddMinutes($duration)

        powercfg -change -standby-timeout-ac 0
        powercfg -change -hibernate-timeout-ac 0
        powercfg -change -monitor-timeout-ac 0

        while ((Get-Date) -lt $endTime) {
          $remaining = $endTime - (Get-Date)
          $hours = [math]::Floor($remaining.TotalHours)
          $minutes = $remaining.Minutes
          $seconds = $remaining.Seconds

          Write-Host "Session active. Time remaining: ${hours}h ${minutes}m ${seconds}s" -ForegroundColor Green
          Write-Host "Bore Public URL: $env:BORE_URL" -ForegroundColor Cyan
          
          Get-Date | Out-Null
          Start-Sleep -Seconds 60
        }

        Write-Host "RDP session time expired. Workflow will end." -ForegroundColor Red

