name: Windows RDP with High Performance (Ngrok Only)

on:
  workflow_dispatch:
    inputs:
      rdp_duration:
        description: 'RDP session duration in minutes (max 360)'
        required: false
        default: '180'
        type: string
      enable_gpu:
        description: 'Enable GPU acceleration'
        required: false
        default: true
        type: boolean

jobs:
  setup-windows-rdp:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Enable RDP and Configure Firewall
      run: |
        Write-Host "Enabling RDP..." -ForegroundColor Yellow
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1

    - name: Create RDP User
      run: |
        Write-Host "Creating RDP user..." -ForegroundColor Yellow
        $Password = ConvertTo-SecureString "P@ssw0rd123!" -AsPlainText -Force
        New-LocalUser -Name "rdpuser" -Password $Password -FullName "RDP User" -Description "GitHub Actions RDP User"
        Add-LocalGroupMember -Group "Remote Desktop Users" -Member "rdpuser"
        Add-LocalGroupMember -Group "Administrators" -Member "rdpuser"

    - name: Install Ngrok
      run: |
        Write-Host "Downloading Ngrok..." -ForegroundColor Yellow
        Invoke-WebRequest -Uri https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
        Expand-Archive -Path ngrok.zip -DestinationPath . -Force

    - name: Configure Ngrok
      run: |
        Write-Host "Configuring Ngrok..." -ForegroundColor Yellow
        .\ngrok.exe authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
        Start-Process -FilePath ".\ngrok.exe" -ArgumentList "tcp 3389" -WindowStyle Hidden
        Start-Sleep -Seconds 10

    - name: Display RDP Connection Info
      run: |
        $NgrokApi = "http://127.0.0.1:4040/api/tunnels"
        $Response = Invoke-RestMethod -Uri $NgrokApi
        $PublicUrl = $Response.tunnels[0].public_url
        Write-Host "=====================================" -ForegroundColor Green
        Write-Host "🔐 RDP IP:PORT => $PublicUrl" -ForegroundColor Green
        Write-Host "👤 Username: rdpuser" -ForegroundColor Green
        Write-Host "🔑 Password: P@ssw0rd123!" -ForegroundColor Green
        Write-Host "=====================================" -ForegroundColor Green

    - name: Keep session alive
      run: |
        Write-Host "Keeping RDP session alive for ${{ github.event.inputs.rdp_duration }} minutes..." -ForegroundColor Yellow
        $duration = [int]"${{ github.event.inputs.rdp_duration }}"
        $endTime = (Get-Date).AddMinutes($duration)

        powercfg -change -standby-timeout-ac 0
        powercfg -change -hibernate-timeout-ac 0
        powercfg -change -monitor-timeout-ac 0

        while ((Get-Date) -lt $endTime) {
            $remaining = $endTime - (Get-Date)
            $hours = [math]::Floor($remaining.TotalHours)
            $minutes = $remaining.Minutes
            $seconds = $remaining.Seconds

            Write-Host "Session active. Time remaining: ${hours}h ${minutes}m ${seconds}s" -ForegroundColor Green
            Get-Date | Out-Null
            Start-Sleep -Seconds 60
        }

        Write-Host "RDP session time expired. Workflow will end." -ForegroundColor Red

